install.packages("ggplot2")
# Loading necessary libraries
library(tidyverse)
library(zoo)
library(ggplot2)
# Loading the data
data <- read.csv("C:/Users/risha/Downloads/covid (1).csv")
# Filtering the data for selected countries
selected_countries <- c("India", "United Kingdom", "Brazil", "Israel")
filtered_data <- data %>% filter(Entity %in% selected_countries)
# Converting 'Day' to Date type
filtered_data$Day <- as.Date(filtered_data$Day)
# Calculating 7-day rolling average with the correct column name
filtered_data <- filtered_data %>%
group_by(Entity) %>%
arrange(Day) %>%
mutate(Rolling_Avg = rollmean(Daily.COVID.19.tests.per.new.confirmed.case, k = 7, fill = NA, align = "right"))
# Creating the plot
ggplot(filtered_data, aes(x = Day, y = Rolling_Avg, color = Entity)) +
geom_line() +
labs(title = "7-Day Rolling Average of Tests Conducted Per Confirmed COVID-19 Case",
x = "Date",
y = "Tests per Case (7-Day Rolling Average)") +
theme_minimal() +
scale_color_manual(values = c("India" = "blue", "United Kingdom" = "green", "Brazil" = "red", "Israel" = "purple"))
# Saving the plot
ggsave("figure_1.png", width = 10, height = 6)
# Creating a summary table with the latest rolling average for each country
summary_table <- filtered_data %>%
group_by(Entity) %>%
filter(!is.na(Rolling_Avg)) %>%
summarise(
Latest_Date = max(Day),
Latest_Rolling_Avg = Rolling_Avg[which.max(Day)]
)
# Display the table
summary_table
# Loading necessary libraries
library(tidyverse)
library(zoo)
library(ggplot2)
# Loading the data
data <- read.csv("C:/Users/risha/Downloads/covid (1).csv")
# Filtering the data for selected countries
selected_countries <- c("India", "United Kingdom", "Brazil", "Israel")
filtered_data <- data %>% filter(Entity %in% selected_countries)
# Converting 'Day' to Date type
filtered_data$Day <- as.Date(filtered_data$Day)
# Calculating 7-day rolling average with the correct column name
filtered_data <- filtered_data %>%
group_by(Entity) %>%
arrange(Day) %>%
mutate(Rolling_Avg = rollmean(Daily.COVID.19.tests.per.new.confirmed.case, k = 7, fill = NA, align = "right"))
# Creating the plot
ggplot(filtered_data, aes(x = Day, y = Rolling_Avg, color = Entity)) +
geom_line() +
labs(title = "7-Day Rolling Average of Tests Conducted Per Confirmed COVID-19 Case",
x = "Date",
y = "Tests per Case (7-Day Rolling Average)") +
theme_minimal() +
scale_color_manual(values = c("India" = "blue", "United Kingdom" = "green", "Brazil" = "red", "Israel" = "purple"))
# Saving the plot
ggsave("figure_1.png", width = 10, height = 6)
# Creating a summary table with the latest rolling average for each country
summary_table <- filtered_data %>%
group_by(Entity) %>%
filter(!is.na(Rolling_Avg)) %>%
summarise(
Latest_Date = max(Day),
Latest_Rolling_Avg = Rolling_Avg[which.max(Day)]
)
# Display the table
summary_table
# Loading necessary libraries
library(tidyverse)
library(zoo)
library(ggplot2)
# Loading the data
data <- read.csv("C:/Users/risha/Downloads/covid (1).csv")
# Filtering the data for selected countries
selected_countries <- c("India", "United Kingdom", "Brazil", "Israel")
filtered_data <- data %>% filter(Entity %in% selected_countries)
# Converting 'Day' to Date type
filtered_data$Day <- as.Date(filtered_data$Day)
# Calculating 7-day rolling average with the correct column name
filtered_data <- filtered_data %>%
group_by(Entity) %>%
arrange(Day) %>%
mutate(Rolling_Avg = rollmean(Daily.COVID.19.tests.per.new.confirmed.case, k = 7, fill = NA, align = "right"))
# Creating the plot
ggplot(filtered_data, aes(x = Day, y = Rolling_Avg, color = Entity)) +
geom_line() +
labs(title = "7-Day Rolling Average of Tests Conducted Per Confirmed COVID-19 Case",
x = "Date",
y = "Tests per Case (7-Day Rolling Average)") +
theme_minimal() +
scale_color_manual(values = c("India" = "blue", "United Kingdom" = "green", "Brazil" = "red", "Israel" = "purple"))
# Saving the plot
ggsave("figure_1.png", width = 10, height = 6)
